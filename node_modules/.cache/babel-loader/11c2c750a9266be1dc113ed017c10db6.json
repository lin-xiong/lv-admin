{"remainingRequest":"/Users/leo/Documents/work/Code/GitHub/vue-manage-system/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!/Users/leo/Documents/work/Code/GitHub/vue-manage-system/node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js!/Users/leo/Documents/work/Code/GitHub/vue-manage-system/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/leo/Documents/work/Code/GitHub/vue-manage-system/node_modules/_vue-loader@15.9.2@vue-loader/lib/index.js??vue-loader-options!/Users/leo/Documents/work/Code/GitHub/vue-manage-system/src/components/page/OPorder.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/leo/Documents/work/Code/GitHub/vue-manage-system/src/components/page/OPorder.vue","mtime":1604229583107},{"path":"/Users/leo/Documents/work/Code/GitHub/vue-manage-system/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/leo/Documents/work/Code/GitHub/vue-manage-system/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/leo/Documents/work/Code/GitHub/vue-manage-system/node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/leo/Documents/work/Code/GitHub/vue-manage-system/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/leo/Documents/work/Code/GitHub/vue-manage-system/node_modules/_vue-loader@15.9.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { OPorderListData } from \"../../api/index\";\nexport default {\n  name: 'taskList',\n  data: function data() {\n    return {\n      query: {},\n      tableData: [],\n      editVisible: false,\n      addVisible: false,\n      pageTotal: 0,\n      editOrderform: {},\n      multiShop: [],\n      id: -1\n    };\n  },\n  created: function created() {\n    this.getData();\n  },\n  methods: {\n    // 获取 easy-mock 的模拟数据\n    getData: function getData() {\n      var _this = this;\n\n      OPorderListData(this.query).then(function (res) {\n        console.log(res);\n        _this.tableData = res.data;\n        _this.pageTotal = res.pageTotal;\n      });\n    },\n    // 触发搜索按钮\n    handleSearch: function handleSearch() {\n      this.getData();\n    },\n    editOrderList: function editOrderList(row, event, column) {\n      var oQuery = {}; // this.$set(oQuery, 'oids', row.oids);\n      // 　　　　　　 getOrderListData(oQuery).then(res => {\n      //                  console.log(res);\n      //                  this.orderListData=res.data;\n      //                  this.orderListVisible=true;\n      //             }).catch(() => {});\n\n      this.editOrderform = row;\n      this.editVisible = true;\n    },\n    getAddr: function getAddr(val) {\n      if (val.length == 11) {}\n    },\n    // 保存编辑\n    saveEdit: function saveEdit() {\n      var _this2 = this;\n\n      taskEditData(this.editTaskform).then(function (res) {\n        console.log(res);\n\n        if (res == 1) {\n          _this2.editVisible = false;\n\n          _this2.$message.success(\"\\u4FEE\\u6539\\u7B2C \".concat(_this2.idx + 1, \" \\u884C\\u6210\\u529F\"));\n\n          _this2.$set(_this2.tableData, _this2.idx, _this2.editTaskform);\n        } else {\n          _this2.$message.error('修改出错！');\n\n          console.log('error edit shop!!');\n          return false;\n        }\n      });\n    },\n    // 分页导航\n    handlePageChange: function handlePageChange(val) {\n      var _this3 = this;\n\n      this.$set(this.query, 'pageIndex', val);\n      taskSearchData(this.query).then(function (res) {\n        console.log(res);\n        _this3.tableData = res.data;\n        _this3.pageTotal = res.pageTotal;\n      });\n    },\n    formatDate: function formatDate(row, column) {\n      // 获取单元格数据\n      var data = row[column.property];\n\n      if (data == null) {\n        return null;\n      }\n\n      var dt = new Date(data);\n      return dt.getFullYear() + '-' + (dt.getMonth() + 1) + '-' + dt.getDate();\n    },\n    formatShopName: function formatShopName(row, column) {\n      // 获取单元格数据\n      var data = row[column.property];\n      if (this.multiShop == null) return null;\n\n      for (var i = 0; i < this.multiShop.length; i++) {\n        if (data == this.multiShop[i].id) return this.multiShop[i].shopName;\n      }\n    },\n    formatStatus: function formatStatus(row, column) {\n      // 获取单元格数据\n      var data = row[column.property];\n      if (data == 2) return \"任务被拉取\";\n      if (data == 200) return \"开始执行\";\n      if (data >= 300 && data < 400) return \"执行第\" + (data - 300) + \"个SKU\";\n      if (data == 400) return \"进入结算\";\n      if (data == 401) return \"已提交地址\";\n      if (data == 800) return \"进入付款\";\n      if (data == 811) return \"支付异常\";\n      if (data == 500) return \"已生成订单\";\n      if (data == 1000) return \"完成\";\n    },\n    formatTaskType: function formatTaskType(row, column) {\n      // 获取单元格数据\n      var data = row[column.property];\n      return this.taskTypes.find(function (x) {\n        return x.key == data;\n      }).label;\n    }\n  }\n};",null]}