{"remainingRequest":"/Users/leo/Documents/work/Code/GitHub/vue-manage-system/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!/Users/leo/Documents/work/Code/GitHub/vue-manage-system/node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js!/Users/leo/Documents/work/Code/GitHub/vue-manage-system/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/leo/Documents/work/Code/GitHub/vue-manage-system/node_modules/_vue-loader@15.9.2@vue-loader/lib/index.js??vue-loader-options!/Users/leo/Documents/work/Code/GitHub/vue-manage-system/src/components/page/GoodsList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/leo/Documents/work/Code/GitHub/vue-manage-system/src/components/page/GoodsList.vue","mtime":1603122943861},{"path":"/Users/leo/Documents/work/Code/GitHub/vue-manage-system/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/leo/Documents/work/Code/GitHub/vue-manage-system/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/leo/Documents/work/Code/GitHub/vue-manage-system/node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/leo/Documents/work/Code/GitHub/vue-manage-system/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/leo/Documents/work/Code/GitHub/vue-manage-system/node_modules/_vue-loader@15.9.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Users/leo/Documents/work/Code/GitHub/vue-manage-system/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { goodsEditData } from \"../../api/index\";\nimport { goodsSearchData } from \"../../api/index\";\nimport { goodsAddData } from \"../../api/index\";\nimport { shopListData } from \"../../api/index\";\nimport { orderSearchData } from \"../../api/index\";\nimport { getOrderListData } from \"../../api/index\";\nimport FileSaver from 'file-saver';\nimport XLSX from 'xlsx';\nexport default {\n  name: 'exportOrderData',\n  data: function data() {\n    var _ref;\n\n    return _ref = {\n      query: {\n        status: 1,\n        pageIndex: 1,\n        pageSize: 10\n      },\n      retrunQuery: {\n        pageIndex: 1,\n        pageSize: 10\n      },\n      orderTableData: [],\n      goodsTableData: [],\n      multipleSelection: [],\n      orderListData: [],\n      delList: [],\n      returnVisible: false,\n      addVisible: false,\n      setReturnVisible: false,\n      orderListVisible: false,\n      pageTotal: 0,\n      setReturnform: {//returnTime:Date\n      },\n      courierTableData: [],\n      multiShop: [],\n      multiHHShop: [],\n      form: {},\n      idx: -1,\n      id: -1,\n      setTimer: null,\n      getDataOnce: true\n    }, _defineProperty(_ref, \"multiShop\", []), _defineProperty(_ref, \"totalCount\", 0), _ref;\n  },\n  created: function created() {\n    console.log(\"created\");\n    if (!this.getDataOnce) return;\n    this.getDataOnce = false;\n    this.handleHHSearch();\n    this.getData();\n  },\n  methods: {\n    getData: function getData() {\n      var _this = this;\n\n      shopListData().then(function (res) {\n        console.log(res);\n        _this.multiShop = res.data;\n        _this.multiHHShop = res.data;\n        var allshop = {\n          id: 0,\n          shopName: '全部'\n        };\n\n        _this.multiShop.splice(0, 0, allshop);\n      });\n    },\n    // 触发搜索按钮\n    handleSearch: function handleSearch() {\n      var _this2 = this;\n\n      //this.$set(this.query, 'pageIndex', 1);\n      console.log(this.query);\n      if (this.query.shopName == '全部') this.$set(this.query, 'shopName', '');\n      goodsSearchData(this.query).then(function (res) {\n        console.log(res);\n        _this2.goodsTableData = res.data;\n        _this2.totalCount = res.data.length;\n      });\n    },\n    // 触发搜索按钮\n    handleHHSearch: function handleHHSearch() {\n      var _this3 = this;\n\n      //this.$set(this.query, 'pageIndex', 1);\n      console.log(this.retrunQuery);\n      orderSearchData(this.retrunQuery).then(function (res) {\n        console.log(res);\n        _this3.orderTableData = res.data;\n        _this3.courierTableData = [];\n        console.log(res.data.length);\n        res.data.forEach(function (item) {\n          var isok = false;\n\n          var _iterator = _createForOfIteratorHelper(_this3.courierTableData),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var v = _step.value;\n\n              if (v.courier == item.courier) {\n                isok = true;\n                v.count += 1;\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          if (!isok) {\n            _this3.courierTableData.push({\n              \"courier\": item.courier,\n              \"count\": 1\n            });\n          }\n        });\n        console.log(_this3.courierTableData); //this.pageTotal = res.pageTotal ; \n      });\n    },\n    // 回收货物操作\n    returnGoods: function returnGoods(index, row) {\n      this.returnVisible = true;\n    },\n    // 回收货物设置操作\n    setReturn: function setReturn(index, row) {\n      var length = this.multipleSelection.length;\n\n      if (length <= 0) {\n        this.$alert(\"请选择归集货品订单\");\n        return;\n      }\n\n      var str = '';\n      var shopNames = '';\n      this.delList = this.delList.concat(this.multipleSelection); //this.setReturnform=this.multipleSelection[0];\n      //this.setReturnform.sku=this.retrunQuery.sku;\n\n      var skuList = [];\n\n      for (var i = 0; i < length; i++) {\n        str += this.multipleSelection[i].id + ',';\n        shopNames += this.multipleSelection[i].shopName + ',';\n\n        var _skus = this.multipleSelection[i].sku.split('+');\n\n        var _loop = function _loop(j) {\n          var _sku = _skus[j].split('@');\n\n          var _count = 1;\n\n          if (_sku.length == 2) {\n            _count = Number(_sku[1]);\n          }\n\n          var _s = skuList.find(function (x) {\n            return x.sku == _sku[0];\n          });\n\n          if (null == _s) {\n            skuList.push({\n              sku: _sku[0],\n              count: _count\n            });\n          } else {\n            _s.count += _count;\n          }\n        };\n\n        for (var j = 0; j < _skus.length; j++) {\n          _loop(j);\n        }\n      }\n\n      console.log(skuList);\n      var skustring = '';\n      skuList.forEach(function (item, index, input) {\n        skustring += item.sku + \"数量:\" + item.count + \"\\r\";\n      });\n      this.setReturnform.sku = skustring;\n      this.setReturnform.Oids = str.substring(0, str.length - 1);\n      this.setReturnform.shopName = shopNames.substring(0, shopNames.length - 1);\n      this.setReturnform.courier = this.retrunQuery.courier;\n      this.multipleSelection = [];\n      this.setReturnVisible = true;\n    },\n    // 回收货物设置操作\n    saveReturnform: function saveReturnform(index, row) {\n      var _this4 = this;\n\n      console.log(this.setReturnform);\n\n      if (!this.setReturnform.sku) {\n        this.$alert(\"请规范指定sku\");\n        return;\n      }\n\n      if (!this.setReturnform.courier) {\n        this.$alert(\"请规范指定快递员\");\n        return;\n      }\n\n      if (!this.setReturnform.returnTime) {\n        this.$alert(\"请选择回寄日期\");\n        return;\n      }\n\n      var oidslen = this.setReturnform.Oids.split(',').length; // 二次确认执行\n\n      this.$confirm('确定回寄' + oidslen + '件商品吗？', '提示', {\n        type: 'warning'\n      }).then(function (res) {\n        goodsAddData(_this4.setReturnform).then(function (res) {\n          console.log(res);\n\n          if (res == 1) {\n            _this4.retrunQuery.sku = null;\n            _this4.retrunQuery.courier = null;\n\n            _this4.handleHHSearch();\n\n            _this4.setReturnVisible = false;\n            _this4.returnVisible = false;\n\n            _this4.$message.success('执行成功');\n          }\n        });\n      }).catch(function () {});\n    },\n    // 多选操作\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    handleGot: function handleGot(index, row) {\n      row.status = 10;\n      goodsEditData(row).then(function (res) {\n        console.log(res);\n\n        if (res == 1) {}\n      }).catch(function () {});\n    },\n    getOrderList: function getOrderList(row, event, column) {\n      var _this5 = this;\n\n      var oQuery = {};\n      this.$set(oQuery, 'oids', row.oids);\n      getOrderListData(oQuery).then(function (res) {\n        console.log(res);\n        _this5.orderListData = res.data;\n        _this5.orderListVisible = true;\n      }).catch(function () {});\n    },\n    // 分页导航\n    handlePageChange: function handlePageChange(val) {\n      var _this6 = this;\n\n      this.$set(this.query, 'pageIndex', val); // if (this.query.shopName=='全部')\n      //     this.$set(this.query, 'shopName', '');\n\n      goodsSearchData(this.query).then(function (res) {\n        console.log(res);\n        _this6.goodsTableData = res.data;\n        _this6.totalCount = res.data.length;\n      });\n    },\n    formatDateTime: function formatDateTime(row, column) {\n      // 获取单元格数据\n      var data = row[column.property];\n\n      if (data == null) {\n        return null;\n      }\n\n      var dt = new Date(data);\n      return dt.getFullYear() + '-' + (dt.getMonth() + 1) + '-' + dt.getDate() + \" \" + dt.getHours() + \":\" + dt.getMinutes() + \":\" + dt.getSeconds();\n    },\n    formatDate: function formatDate(row, column) {\n      // 获取单元格数据\n      var data = row[column.property];\n\n      if (data == null) {\n        return null;\n      }\n\n      var dt = new Date(data);\n      return dt.getFullYear() + '-' + (dt.getMonth() + 1) + '-' + dt.getDate();\n    },\n    formatShopName: function formatShopName(row, column) {\n      // 获取单元格数据\n      var data = row[column.property];\n      if (this.multiShop == null) return null;\n\n      for (var i = 0; i < this.multiShop.length; i++) {\n        if (data == this.multiShop[i].id) return this.multiShop[i].shopName;\n      }\n    },\n    formatAddr: function formatAddr(row, column) {\n      // 获取单元格数据\n      var data = row[column.property];\n      var arr = data.split('地址：');\n      if (arr) return arr[1];else return data;\n    },\n    formatStatus: function formatStatus(row, column) {\n      var data = row[column.property];\n      if (data == 2) return \"任务被拉取\";\n      if (data == 200) return \"开始执行\";\n      if (data >= 300 && data < 400) return \"执行第\" + (data - 300) + \"个SKU\";\n      if (data == 400) return \"进入结算\";\n      if (data == 401) return \"已提交地址\";\n      if (data == 800) return \"进入付款\";\n      if (data == 811) return \"支付异常\";\n      if (data == 500) return \"已生成订单\";\n      if (data == 1000) return \"完成\";\n    },\n    //定义导出Excel表格事件\n    exportExcel: function exportExcel() {\n      /* 从表生成工作簿对象 */\n      var wb = XLSX.utils.table_to_book(document.querySelector(\"#goodsListTableExport\"), {\n        raw: true\n      });\n      /* 获取二进制字符串作为输出 */\n\n      var wbout = XLSX.write(wb, {\n        bookType: \"xlsx\",\n        bookSST: true,\n        type: \"array\"\n      });\n      var fn = \"\";\n      if (this.query.shopName != null) fn = fn + this.query.shopName + \"_\";\n      if (this.query.begin == this.query.end) fn = fn + this.query.begin;else fn = fn + this.query.begin + \"到\" + this.query.end;\n      fn = fn + \".xlsx\";\n\n      try {\n        FileSaver.saveAs( //Blob 对象表示一个不可变、原始数据的类文件对象。\n        //Blob 表示的不一定是JavaScript原生格式的数据。\n        //File 接口基于Blob，继承了 blob 的功能并将其扩展使其支持用户系统上的文件。\n        //返回一个新创建的 Blob 对象，其内容由参数中给定的数组串联组成。\n        new Blob([wbout], {\n          type: \"application/octet-stream\"\n        }), //设置导出文件名称\n        fn);\n      } catch (e) {\n        if (typeof console !== \"undefined\") console.log(e, wbout);\n      }\n\n      return wbout;\n    }\n  },\n  deactivated: function deactivated() {\n    console.log(\"deactivated\");\n    clearTimeout(this.setTimer);\n    this.setTimer = null;\n    this.getDataOnce = true;\n  },\n  activated: function activated() {\n    console.log(\"activated\");\n    if (!this.getDataOnce) return;\n    this.getDataOnce = false;\n    this.getData();\n  }\n};",null]}